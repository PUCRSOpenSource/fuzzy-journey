<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="buffer_8cpp" kind="file" language="C++">
    <compoundname>buffer.cpp</compoundname>
    <includes refid="buffer_8h" local="yes">buffer.h</includes>
    <incdepgraph>
      <node id="158">
        <label>cstdint</label>
      </node>
      <node id="157">
        <label>buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
      </node>
      <node id="164">
        <label>string</label>
      </node>
      <node id="162">
        <label>datablock.h</label>
        <link refid="datablock_8h"/>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
      </node>
      <node id="163">
        <label>table_entry.h</label>
        <link refid="table__entry_8h"/>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
      </node>
      <node id="156">
        <label>src/buffer.cpp</label>
        <link refid="buffer.cpp"/>
        <childnode refid="157" relation="include">
        </childnode>
      </node>
      <node id="160">
        <label>vector</label>
      </node>
      <node id="159">
        <label>cstdlib</label>
      </node>
      <node id="161">
        <label>deque</label>
      </node>
      <node id="166">
        <label>rowid.h</label>
        <link refid="rowid_8h"/>
        <childnode refid="158" relation="include">
        </childnode>
      </node>
      <node id="165">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="buffer_8h" kindref="compound">buffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"><ref refid="class_buffer_1ae7ef2cd201190fde551dcb902627112b" kindref="member">Buffer::Buffer</ref>()</highlight></codeline>
<codeline lineno="4"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/>loadingIterator<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><ref refid="class_buffer_1a59b8743e4a5f731bdd0c4185c9ef263b" kindref="member">Buffer::~Buffer</ref>()</highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><ref refid="class_row_i_d" kindref="compound">RowID</ref><sp/><ref refid="class_buffer_1a250bdf03a7f6ecbce45ad73649f33d90" kindref="member">Buffer::newEntry</ref>(<ref refid="class_table_entry" kindref="compound">TableEntry</ref><sp/>entry)</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;datablock<sp/>:<sp/>datablocks)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>result<sp/>=<sp/>datablock.addEntry(entry);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loadingIterator<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_row_i_d" kindref="compound">RowID</ref>(datablock.getAddress(),<sp/>result);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>index<sp/>=<sp/><ref refid="class_buffer_1a8bf19f648814eeae6132492ae279b124" kindref="member">chooseDatablock</ref>();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_buffer_1ac1e530265ea573e202c04c17497a62d8" kindref="member">loadDatablock</ref>(index);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_buffer_1a250bdf03a7f6ecbce45ad73649f33d90" kindref="member">newEntry</ref>(entry);</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><ref refid="class_table_entry" kindref="compound">TableEntry</ref><sp/><ref refid="class_buffer_1aefa0831d62778a61ba8b1f66195033d0" kindref="member">Buffer::getEntry</ref>(<ref refid="class_row_i_d" kindref="compound">RowID</ref><sp/>rowID)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;datablock<sp/>:<sp/>datablocks)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(datablock.getAddress()<sp/>==<sp/>rowID.<ref refid="class_row_i_d_1ac50dc7c3da49be36846ea2fa14e72d49" kindref="member">getBlockNumber</ref>())</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>datablock.getEntry(rowID.<ref refid="class_row_i_d_1afe76dc7120b0571593cce44e9d3e1341" kindref="member">getPosition</ref>());</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_buffer_1ac1e530265ea573e202c04c17497a62d8" kindref="member">loadDatablock</ref>(rowID.<ref refid="class_row_i_d_1ac50dc7c3da49be36846ea2fa14e72d49" kindref="member">getBlockNumber</ref>());</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_buffer_1aefa0831d62778a61ba8b1f66195033d0" kindref="member">getEntry</ref>(rowID);</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_buffer_1a31772044a1fad7bd9d259cd38ae5d3c3" kindref="member">Buffer::remove</ref>(<ref refid="class_row_i_d" kindref="compound">RowID</ref><sp/>rowID)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;datablock<sp/>:<sp/>datablocks)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(datablock.getAddress()<sp/>==<sp/>rowID.<ref refid="class_row_i_d_1ac50dc7c3da49be36846ea2fa14e72d49" kindref="member">getBlockNumber</ref>())</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datablock.remove(rowID.<ref refid="class_row_i_d_1afe76dc7120b0571593cce44e9d3e1341" kindref="member">getPosition</ref>());</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_buffer_1ac1e530265ea573e202c04c17497a62d8" kindref="member">loadDatablock</ref>(rowID.<ref refid="class_row_i_d_1ac50dc7c3da49be36846ea2fa14e72d49" kindref="member">getBlockNumber</ref>());</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">remove</highlight><highlight class="normal">(rowID);</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_buffer_1ac1e530265ea573e202c04c17497a62d8" kindref="member">Buffer::loadDatablock</ref>(int16_t<sp/>index)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE*<sp/>ptr_myDataBlock<sp/>=<sp/>fopen(</highlight><highlight class="stringliteral">&quot;datafile.part&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;r+b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>fseek(ptr_myDataBlock,<sp/>index<sp/>*<sp/><ref refid="buffer_8h_1a9f2c14632d44cde3d1bd6a7da3edf73d" kindref="member">DATABLOCK_SIZE</ref><sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int16_t),<sp/>SEEK_SET);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>header_size_aux;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t*<sp/>data_aux<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(malloc(<ref refid="datablock_8h_1a70ed59adcb4159ac551058053e649640" kindref="member">SIZE</ref>));</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>fread(&amp;header_size_aux,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/>1,<sp/>ptr_myDataBlock);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>fread(data_aux,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint8_t),<sp/><ref refid="datablock_8h_1a70ed59adcb4159ac551058053e649640" kindref="member">SIZE</ref>,<sp/>ptr_myDataBlock);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>datablocks.push_back(<ref refid="class_data_block" kindref="compound">DataBlock</ref>(index,<sp/>header_size_aux,<sp/>data_aux));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(ptr_myDataBlock);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(datablocks.size()<sp/>&gt;<sp/><ref refid="buffer_8h_1a51a51480d875f80355412fa95fd48c6c" kindref="member">FRAMES</ref>)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_data_block" kindref="compound">DataBlock</ref><sp/>last<sp/>=<sp/>datablocks.front();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_buffer_1aae197d113dc4d8826af7c5233df81677" kindref="member">saveDatablock</ref>(last);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datablocks.pop_front();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_buffer_1aae197d113dc4d8826af7c5233df81677" kindref="member">Buffer::saveDatablock</ref>(<ref refid="class_data_block" kindref="compound">DataBlock</ref><sp/>datablock)</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE*<sp/>ptr_myDataBlock<sp/>=<sp/>fopen(</highlight><highlight class="stringliteral">&quot;datafile.part&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;r+&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>fseek(ptr_myDataBlock,<sp/>datablock.<ref refid="class_data_block_1a2e3ffb4ff7b6728c5a6e716d5a4b9cd1" kindref="member">getAddress</ref>()<sp/>*<sp/><ref refid="buffer_8h_1a9f2c14632d44cde3d1bd6a7da3edf73d" kindref="member">DATABLOCK_SIZE</ref>,<sp/>SEEK_SET);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>addr_aux<sp/>=<sp/>datablock.<ref refid="class_data_block_1a2e3ffb4ff7b6728c5a6e716d5a4b9cd1" kindref="member">getAddress</ref>();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>header_size_aux<sp/>=<sp/>datablock.<ref refid="class_data_block_1a3f709eb20cef623efdbc75390d1f1772" kindref="member">getHeaderSize</ref>();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t*<sp/>data_aux<sp/>=<sp/>datablock.<ref refid="class_data_block_1a902c8d48bb298652f6ca6280f1045496" kindref="member">getData</ref>();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(&amp;addr_aux,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int16_t),<sp/>1,<sp/>ptr_myDataBlock);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(&amp;header_size_aux,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/>1,<sp/>ptr_myDataBlock);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(data_aux,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint8_t),<sp/><ref refid="datablock_8h_1a70ed59adcb4159ac551058053e649640" kindref="member">SIZE</ref>,<sp/>ptr_myDataBlock);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(ptr_myDataBlock);</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_buffer_1a47a8a3546a8c632e78f3a32e39ea9a18" kindref="member">Buffer::saveData</ref>()</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;datablock<sp/>:<sp/>datablocks)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_buffer_1aae197d113dc4d8826af7c5233df81677" kindref="member">saveDatablock</ref>(datablock);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">int16_t<sp/><ref refid="class_buffer_1a8bf19f648814eeae6132492ae279b124" kindref="member">Buffer::chooseDatablock</ref>()</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(loadingIterator<sp/>&lt;<sp/><ref refid="buffer_8h_1a1a279d1b0f149d12af596bb5cf8a8d02" kindref="member">DATABLOCKS_TOTAL</ref>)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_buffer_1a7f10a8dbeb40b007788afb25228584d3" kindref="member">isLoaded</ref>(loadingIterator))</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>loadingIterator;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loadingIterator++;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_buffer_1a7f10a8dbeb40b007788afb25228584d3" kindref="member">Buffer::isLoaded</ref>(uint16_t<sp/>index)</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;datablock<sp/>:<sp/>datablocks)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(datablock.<ref refid="class_data_block_1a2e3ffb4ff7b6728c5a6e716d5a4b9cd1" kindref="member">getAddress</ref>()<sp/>==<sp/>index)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/buffer.cpp"/>
  </compounddef>
</doxygen>
